# main.py

import subprocess
import os
import signal
import sys
import time
import json
import datetime
from typing import Optional, Dict, List
from tracking import UserTracker


def cleanup_files():
    """–û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª—ã –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
    for file in ['command.json', 'result.json']:
        if os.path.exists(file):
            try:
                os.remove(file)
                print(f"‚úÖ –§–∞–π–ª {file} –æ—á–∏—â–µ–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ {file}: {str(e)}")


def check_session_files() -> List[str]:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ —Å–µ—Å—Å–∏–π"""
    session_files = [f for f in os.listdir() if f.endswith('.session')]
    if not session_files:
        print("""
‚ö†Ô∏è –§–∞–π–ª—ã —Å–µ—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!
üì± –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ auth_accounts.py –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
""")
    return session_files


def check_config_files() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = ['config.py', 'tracking.py']
    missing_files = [f for f in required_files if not os.path.exists(f)]

    if missing_files:
        print(f"""
‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:
{chr(10).join(f'‚Ä¢ {f}' for f in missing_files)}
""")
        return False
    return True


def initialize_tracker() -> Optional[UserTracker]:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"""
    try:
        tracker = UserTracker()
        stats = tracker.get_overall_stats()
        print(f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:
‚Ä¢ –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {stats['total_added_all_time']}
‚Ä¢ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24—á: {stats['total_added_24h']}
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {stats['accounts_available']}
""")
        return tracker
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç—Ä–µ–∫–µ—Ä–∞: {str(e)}")
        return None


def start_processes() -> Dict[str, subprocess.Popen]:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"""
    processes = {}
    try:
        # –ó–∞–ø—É—Å–∫ telebot –ø—Ä–æ—Ü–µ—Å—Å–∞
        processes['telebot'] = subprocess.Popen(
            ["python", "telebot_process.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        print("‚úÖ Telebot –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω")

        # –ó–∞–ø—É—Å–∫ telethon –ø—Ä–æ—Ü–µ—Å—Å–∞
        processes['telethon'] = subprocess.Popen(
            ["python", "telethon_process.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        print("‚úÖ Telethon –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {str(e)}")

    return processes


def monitor_processes(processes: Dict[str, subprocess.Popen]):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"""
    while True:
        try:
            for name, process in processes.items():
                if process.poll() is not None:
                    print(f"‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å {name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...")

                    # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                    stdout, stderr = process.communicate()
                    if stdout:
                        print(f"–í—ã–≤–æ–¥ {name}:\n{stdout.decode()}")
                    if stderr:
                        print(f"–û—à–∏–±–∫–∏ {name}:\n{stderr.decode()}")

                    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
                    processes[name] = subprocess.Popen(
                        ["python", f"{name}_process.py"],
                        stdout=subprocess.PIPE,
                        stderr=subprocess.PIPE
                    )
                    print(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å {name} –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")

            time.sleep(5)

        except KeyboardInterrupt:
            print("\n‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
            cleanup_processes(processes)
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {str(e)}")
            time.sleep(5)


def cleanup_processes(processes: Dict[str, subprocess.Popen]):
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"""
    print("\nüîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")

    for name, process in processes.items():
        try:
            process.terminate()
            print(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å {name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ {name}: {str(e)}")

    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏
    cleanup_files()


def main():
    print("""
üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
================================
""")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not check_config_files():
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–π
    session_files = check_session_files()
    if not session_files:
        return

    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
    cleanup_files()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–∫–µ—Ä–∞
    tracker = initialize_tracker()
    if not tracker:
        return

    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    processes = start_processes()
    if not processes:
        return
#h

    print("""
‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –±–æ—Ç–µ:
‚Ä¢ /status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ /add - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ /help - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
""")

    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    try:
        monitor_processes(processes)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    finally:
        cleanup_processes(processes)
        print("\nüëã –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")


# 1. –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–µ—Å—Å–∏–∏
#rm *.session

# 2. –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã –∫–æ–º–∞–Ω–¥
#rm command.json result.json

# 3. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
#python auth_accounts.py

# 4. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
#python main.py

